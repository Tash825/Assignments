package com.example.regno20bcg10092

import android.annotation.SuppressLint
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Button
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.input.PasswordVisualTransformation
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.regno20bcg10092.ui.theme.Regno20BCG10092Theme
import kotlin.reflect.KProperty

class MainActivity : ComponentActivity() {
    @OptIn(ExperimentalMaterial3Api::class)
    @SuppressLint("RememberReturnType")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            Regno20BCG10092Theme {
                // A surface container using the 'background' color from the theme
                Column(verticalArrangement = Arrangement.Center,
                    horizontalAlignment = Alignment.CenterHorizontally,
                    modifier = Modifier
                        .fillMaxSize()
                        .background(color = Color.LightGray)) {
                    Image(painterResource(id = R.drawable.img)  , contentDescription ="" )
                    Text(text = "Username")
                    var abc by remember {
                        mutableStateOf("")
                    }
                    TextField(value = abc, onValueChange = {abc=it} )
                    Text(text = "Password")
                    var pass by remember {
                        mutableStateOf("")
                    }
                    TextField(value = pass , onValueChange = {pass=it},
                        visualTransformation = PasswordVisualTransformation() )
                    Button(
                        onClick = { /* Perform login action */ },
                        modifier = Modifier.padding(16.dp)
                    ) {
                        Text(text = "Log In")
                    }
                    Text(
                        text = "Don't have an account? Sign up",
                        modifier = Modifier.padding(bottom = 16.dp)
                    )

                }
            }
        }
    }
}





